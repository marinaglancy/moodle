{"version":3,"sources":["../src/ajaxform.js"],"names":["define","$","Ajax","Notification","Templates","Event","Str","Y","Fragment","AjaxForm","container","formClass","init","prototype","selectorPrefix","element","get_strings","key","component","catch","exception","on","cancelButtonPressed","bind","noSubmitButtonPressed","submitFormAjax","getContainer","closest","load","args","getBody","param","then","html","js","updateForm","formDataString","promise","Deferred","call","methodname","formdata","form","response","resolve","processCollectedJavascript","javascript","fail","ex","reject","onSubmitSuccess","onValidationError","onCancel","onSubmitError","e","preventDefault","currentTarget","notifyFormSubmitAjax","find","formData","serialize","el","encodeURIComponent","attr","disableButtons","use","M","core_formchangechecker","reset_form_dirty_state","replaceNodeContents","validateElements","invalid","merge","length","first","focus","enableButtons","removeAttr","submitted","data","JSON","parse"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Display an embedded form, it is only loaded and reloaded inside its container\n *\n * @module     core_form/ajaxform\n * @package    core_form\n * @copyright  2019 Marina Glancy\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine([\n    'jquery',\n    'core/ajax',\n    'core/notification',\n    'core/templates',\n    'core/event',\n    'core/str',\n    'core/yui',\n    'core/fragment'\n], function($, Ajax, Notification, Templates, Event, Str, Y, Fragment) {\n    /**\n     * Constructor\n     *\n     * Creates an instance\n     *\n     * @param {jQuery|String|Element} container - the element that wraps the <form> element\n     * @param {string} formClass full name of the php class that extends \\core_form\\modal , must be in autoloaded location\n     */\n    var AjaxForm = function(container, formClass) {\n        this.formClass = formClass;\n        this.container = container;\n        this.init();\n    };\n\n    /**\n     * @var {jQuery} container\n     */\n    AjaxForm.prototype.container = null;\n\n    /**\n     * @var {string} formClass\n     */\n    AjaxForm.prototype.formClass = '';\n\n    /**\n     * Initialise listeners.\n     *\n     * @private\n     */\n    AjaxForm.prototype.init = async function() {\n        var element,\n            selectorPrefix = '';\n        if (typeof this.container === 'object') {\n            // The container is an element on the page. Register a listener for this element.\n            element = $(this.container);\n        } else {\n            // The container is a CSS selector. Register a listener that picks up the element dynamically.\n            element = $('body');\n            selectorPrefix = this.container + ' ';\n        }\n\n        // Ensure strings required for shortforms are always available.\n        await Str.get_strings([\n            {key: 'collapseall', component: 'moodle'},\n            {key: 'expandall', component: 'moodle'}\n        ]).catch(Notification.exception);\n\n        // We catch the press on submit buttons in the forms.\n        element.on('click', selectorPrefix + 'form input[type=submit][data-cancel]', this.cancelButtonPressed.bind(this));\n\n        // We catch the press on submit buttons in the forms.\n        element.on('click', selectorPrefix + 'form input[type=submit][data-no-submit]', this.noSubmitButtonPressed.bind(this));\n\n        // We catch the form submit event and use it to submit the form with ajax.\n        element.on('submit', selectorPrefix + 'form', this.submitFormAjax.bind(this));\n    };\n\n    /**\n     * Gets a container that corresponds to the given element\n     *\n     * @param {jQuery|Element} element\n     * @return {jQuery}\n     */\n    AjaxForm.prototype.getContainer = function(element) {\n        if (typeof this.container === 'object') {\n            // The container is an element on the page.\n            return $(this.container);\n        } else {\n            // The container is a CSS selector.\n            return $(element).closest(this.container);\n        }\n    };\n\n    /**\n     * Loads the form via AJAX and shows it inside a given container\n     *\n     * @param {Object} args\n     * @return {Promise}\n     * @public\n     */\n    AjaxForm.prototype.load = function(args) {\n        var container = $(this.container);\n        return this.getBody($.param(args)).then(function(html, js) {\n            this.updateForm(container, html, js);\n        }.bind(this));\n    };\n\n    /**\n     * @param {String} formDataString form data in format of a query string\n     * @method getBody\n     * @private\n     * @return {Promise}\n     */\n    AjaxForm.prototype.getBody = function(formDataString) {\n        var promise = $.Deferred();\n        Ajax.call([{\n            methodname: 'core_form_modal',\n            args: {\n                formdata: formDataString,\n                form: this.formClass\n            }\n        }])[0]\n            .then(function(response) {\n                promise.resolve(response.html, Fragment.processCollectedJavascript(response.javascript));\n                return null;\n            })\n            .fail(function(ex) {\n                promise.reject(ex);\n            });\n        return promise.promise();\n    };\n\n    /**\n     * On form submit. Caller may override\n     *\n     * @param {Object} response Response received from the form's \"process\" method\n     * @param {jQuery} container\n     * @return {Object}\n     */\n    AjaxForm.prototype.onSubmitSuccess = function(response, container) {\n        // Remove the form since its contents is no longer correct. For example, if the element was created as a result of\n        // form submission the \"id\" in the form will be still zero.\n        container.html('');\n\n        // Return here is irrelevant, it is only present to make eslint happy.\n        return response;\n    };\n\n    /**\n     * On form validation error. Caller may override\n     *\n     * @return {mixed}\n     */\n    AjaxForm.prototype.onValidationError = function() {\n        // By default this function does nothing. Return here is irrelevant, it is only present to make eslint happy.\n        return undefined;\n    };\n\n    /**\n     * On form cancel. Caller may override\n     * @param {jQuery} container\n     */\n    AjaxForm.prototype.onCancel = function(container) {\n        // By default removes the form from the DOM.\n        container.html('');\n    };\n\n    /**\n     * On exception during form processing. Caller may override\n     *\n     * @param {Object} exception\n     */\n    AjaxForm.prototype.onSubmitError = function(exception) {\n        Notification.exception(exception);\n    };\n\n    /**\n     * Click on a \"submit\" button that is marked in the form as registerNoSubmitButton()\n     *\n     * @method submitButtonPressed\n     * @private\n     * @param {Event} e Form submission event.\n     */\n    AjaxForm.prototype.noSubmitButtonPressed = function(e) {\n        e.preventDefault();\n\n        var container = this.getContainer(e.currentTarget);\n        Event.notifyFormSubmitAjax(container.find('form')[0], true);\n\n        // Add the button name to the form data and submit it.\n        var formData = container.find('form').serialize(),\n            el = $(e.currentTarget);\n        formData = formData + '&' + encodeURIComponent(el.attr('name')) + '=' + encodeURIComponent(el.attr('value'));\n        this.disableButtons(container);\n        this.getBody(formData)\n            .then(function(html, js) {\n                this.updateForm(container, html, js);\n            }.bind(this))\n            .fail(Notification.exception);\n    };\n\n    /**\n     * Click on a \"cancel\" button\n     *\n     * @method cancelButtonPressed\n     * @private\n     * @param {Event} e Form submission event.\n     */\n    AjaxForm.prototype.cancelButtonPressed = function(e) {\n        e.preventDefault();\n\n        // Notify listeners that the form is about to be submitted (this will reset atto autosave).\n        var container = this.getContainer(e.currentTarget);\n        Event.notifyFormSubmitAjax(container.find('form')[0], true);\n\n        // Reset \"dirty\" form state (warning if there are changes).\n        Y.use('moodle-core-formchangechecker', function() {\n            M.core_formchangechecker.reset_form_dirty_state();\n        });\n\n        this.onCancel(container);\n    };\n\n    /**\n     * Update form contents\n     *\n     * @param {jQuery} container\n     * @param {string} html\n     * @param {string} js\n     */\n    AjaxForm.prototype.updateForm = function(container, html, js) {\n        Templates.replaceNodeContents(container, html, js);\n    };\n\n    /**\n     * Validate form elements\n     * @param {jQuery} container\n     * @return {boolean} true if client-side validation has passed, false if there are errors\n     */\n    AjaxForm.prototype.validateElements = function(container) {\n\n        // Notify listeners that the form is about to be submitted (this will reset atto autosave).\n        Event.notifyFormSubmitAjax(container.find('form')[0]);\n\n        // Now the change events have run, see if there are any \"invalid\" form fields.\n        var invalid = $.merge(\n            container.find('[aria-invalid=\"true\"]'),\n            container.find('.error')\n        );\n\n        // If we found invalid fields, focus on the first one and do not submit via ajax.\n        if (invalid.length) {\n            invalid.first().focus();\n            return false;\n        }\n\n        return true;\n    };\n\n    /**\n     * Disable buttons during form submission\n     * @param {jQuery} container\n     * @private\n     */\n    AjaxForm.prototype.disableButtons = function(container) {\n        container.find('form input[type=\"submit\"]').attr('disabled', true);\n    };\n\n    /**\n     * Enable buttons after form submission (on validation error)\n     * @param {jQuery} container\n     * @private\n     */\n    AjaxForm.prototype.enableButtons = function(container) {\n        container.find('form input[type=\"submit\"]').removeAttr('disabled');\n    };\n\n    /**\n     * Private method\n     *\n     * @method submitFormAjax\n     * @private\n     * @param {Event} e Form submission event.\n     */\n    AjaxForm.prototype.submitFormAjax = function(e) {\n        // We don't want to do a real form submission.\n        e.preventDefault();\n        var container = this.getContainer(e.currentTarget);\n\n        // If we found invalid fields, focus on the first one and do not submit via ajax.\n        if (!this.validateElements(container)) {\n            return;\n        }\n        this.disableButtons(container);\n\n        // Convert all the form elements values to a serialised string.\n        var formData = container.find('form').serialize();\n\n        // Now we can continue...\n        Ajax.call([{\n            methodname: 'core_form_modal',\n            args: {\n                formdata: formData,\n                form: this.formClass\n            }\n        }])[0]\n            .then(function(response) {\n                if (!response.submitted) {\n                    // Form was not submitted, it could be either because validation failed or because no-submit button was pressed.\n                    this.updateForm(container, response.html, Fragment.processCollectedJavascript(response.javascript));\n                    this.enableButtons(container);\n                    this.onValidationError();\n                } else {\n                    // Form was submitted properly.\n                    // Reset \"dirty\" form state (warning if there are changes).\n                    Y.use('moodle-core-formchangechecker', function() {\n                        M.core_formchangechecker.reset_form_dirty_state();\n                    });\n\n                    // Execute callback.\n                    var data = JSON.parse(response.data);\n                    this.enableButtons(container);\n                    this.onSubmitSuccess(data, container);\n                }\n                return null;\n            }.bind(this))\n            .fail(this.onSubmitError.bind(this));\n    };\n\n    return AjaxForm;\n});\n"],"file":"ajaxform.min.js"}