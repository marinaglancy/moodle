{"version":3,"file":"edit.min.js","sources":["../src/edit.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript module for editing blocks\n *\n * @module      core_block/edit\n * @copyright   2022 Marina Glancy\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport ModalForm from 'core_form/modalform';\nimport Notification from 'core/notification';\nimport {get_string as getString} from 'core/str';\nimport {add as addToast} from 'core/toast';\n\nconst SELECTORS = {\n    EDITBLOCK: '[data-action=\"editblock\"][data-blockid]',\n};\n\n/**\n * Initialize module\n * @param {String} pagehash\n */\nexport const init = (pagehash) => {\n    document.addEventListener('click', e => {\n        /* eslint-disable no-console */\n        console.log(e);\n        const target = e.target.closest(SELECTORS.EDITBLOCK);\n        console.log(target);\n        e.preventDefault();\n        if (!target) {\n            return;\n        }\n\n        const modalForm = new ModalForm({\n            modalConfig: {\n                title: getString('contactdataprotectionofficer', 'tool_dataprivacy'),\n            },\n            args: {blockid: target.getAttribute('data-blockid'), pagehash},\n            formClass: 'core_block\\\\form\\\\edit_form',\n            saveButtonText: getString('send', 'tool_dataprivacy'),\n            returnFocus: target,\n        });\n\n        // Show a toast notification when the form is submitted.\n        modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, event => {\n            if (event.detail.result) {\n                getString('requestsubmitted', 'tool_dataprivacy').then(addToast).catch();\n            } else {\n                const warningMessages = event.detail.warnings.map(warning => warning.message);\n                Notification.addNotification({\n                    type: 'error',\n                    message: warningMessages.join('<br>')\n                });\n            }\n        });\n\n        modalForm.show();\n    });\n};\n"],"names":["SELECTORS","pagehash","document","addEventListener","e","console","log","target","closest","preventDefault","modalForm","ModalForm","modalConfig","title","args","blockid","getAttribute","formClass","saveButtonText","returnFocus","events","FORM_SUBMITTED","event","detail","result","then","addToast","catch","warningMessages","warnings","map","warning","message","addNotification","type","join","show"],"mappings":";;;;;;;0LA4BMA,oBACS,wDAOMC,WACjBC,SAASC,iBAAiB,SAASC,IAE/BC,QAAQC,IAAIF,SACNG,OAASH,EAAEG,OAAOC,QAAQR,wBAChCK,QAAQC,IAAIC,QACZH,EAAEK,kBACGF,oBAICG,UAAY,IAAIC,mBAAU,CAC5BC,YAAa,CACTC,OAAO,mBAAU,+BAAgC,qBAErDC,KAAM,CAACC,QAASR,OAAOS,aAAa,gBAAiBf,SAAAA,UACrDgB,UAAW,8BACXC,gBAAgB,mBAAU,OAAQ,oBAClCC,YAAaZ,SAIjBG,UAAUP,iBAAiBO,UAAUU,OAAOC,gBAAgBC,WACpDA,MAAMC,OAAOC,2BACH,mBAAoB,oBAAoBC,KAAKC,YAAUC,YAC9D,OACGC,gBAAkBN,MAAMC,OAAOM,SAASC,KAAIC,SAAWA,QAAQC,gCACxDC,gBAAgB,CACzBC,KAAM,QACNF,QAASJ,gBAAgBO,KAAK,cAK1CzB,UAAU0B"}